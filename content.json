{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"每日总结-1月8日","slug":"1-8","date":"2022-01-08T15:33:25.000Z","updated":"2022-01-08T17:58:16.856Z","comments":true,"path":"2022/01/08/1-8/","link":"","permalink":"http://example.com/2022/01/08/1-8/","excerpt":"","text":"高斯消元与线性基高斯消元与线性基(×) 疯狂查资料搭建博客(√) 使用的是hexo框架+github的方法搭建的博客 今日总结今天上午去做核酸，请了假，在做完核酸回来之后一直在搞博客，没有进行训练；下午也是大部分时间都在进行个人博客的一个搭建；晚上依然是搭建博客😭。 到了1点钟左右，终于是搭建好了自己的博客。 当然，十分感谢我的好朋友的帮助。不然不知道到什么时候才能搭建好。 慢的原因(其一)我刚开始是跟着我朋友给我发的链接进行一步一步操作的，但是，在进行了无数次的重复操作并且每次都是以失败告终后，我感觉，有问题。 之后去各种地方查找相关资料，最后，在(今晚🤔忘了几点了，总之就很晚，可能快12点吧)的时候，我终于在B站的这个视频中取到了真经。 具体原因就是我刚开始看的教程都是老版的教程，但是最近github有进行这方面的更新 在上传到github上时不能用密钥进行验证了 默认的分支进行修改了 解决方法(其一)(和原版教程相比) 将 _config.yml 文件中的 branch 选项改为 main (之前的教程中这里都是master) 在输入用户名密码验证的输入密码时，不能输入账户的密码，应该输入令牌(令牌设置在下一条)或者使用其他方法进行验证。 令牌的设置 在github中进入 settings 点击 Developer settings 点击 Personal access tokens 新建一个令牌 即可 慢的原因(其二)我在写昨天的那片博客的时候，需要在里面复制一张图片，但是，不管是使用绝对路径还是使用相对路径，在本地的.md文件中可以正常看到图片，但是到网页端就看不到图片。 解决方法(其二)我是看B站上的这个视频进行操作的。 具体的就是 将 _config.yml 文件中的 post_asset_folder 选项设置为 true 下载一个插件 在 \\source\\_posts 路径下进行 Git Bash 输入 npm add https://github.com/CodeFalling/hexo-asset-image 进行下载 之后在.md文件中需要使用图片时，使用相对路径即可 结语不管怎么样，也算是把博客搭建好了，之后会进行博客的美化工作。 如果遇到了类似的困难，可以将本篇博客转发。","categories":[],"tags":[]},{"title":"每日总结:1月7日","slug":"1-7","date":"2022-01-08T14:25:04.000Z","updated":"2022-01-08T16:57:05.739Z","comments":true,"path":"2022/01/08/1-7/","link":"","permalink":"http://example.com/2022/01/08/1-7/","excerpt":"","text":"高斯消元与线性基感觉就是线代里面的矩阵，还有线性相关，这两部分。 今日战况 今日总结A题快要写吐了，但是在写A题的时候把高斯消元理解了不少。甚至快把矩阵类(结构体)给封装好了(bushi)。 把差不多写好的浮点数的矩阵结构体代码放到这里。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081struct Matrix&#123; vector&lt;vector&lt;double&gt; &gt; c; int nn,mm; Matrix()&#123; nn=0;mm=0; &#125; Matrix(int nnn,int mmm)&#123; nn=nnn;mm=mmm; c.resize(nnn+1); for(int i=1;i&lt;=nn;++i) c[i].resize(mm+1); &#125; friend Matrix operator*(const Matrix&amp; x,const Matrix&amp; y)&#123; Matrix re(x.nn,y.mm); for(int i=1;i&lt;=x.nn;++i)&#123; for(int j=1;j&lt;=y.mm;++j)&#123; for(int k=1;k&lt;=x.mm;++k)&#123; re.c[i][j]+=(double)((LL)(x.c[i][k]*y.c[k][j])%MOD)+x.c[i][k]*y.c[k][j]-(LL)(x.c[i][k]*y.c[k][j]); re.c[i][j]=(double)((LL)(re.c[i][j])%MOD)+re.c[i][j]-(LL)(re.c[i][j]); &#125; &#125; &#125; return re; &#125; void elimination()&#123; int nm=min(nn,mm); for(int cc=1,r=1;cc&lt;=nm;++cc)&#123; int t=r; for(int i=r+1;i&lt;=nn;++i) if(fabs(c[i][cc])&gt;fabs(c[t][cc])) t=i; if(fabs(c[t][cc])&lt;eps) continue; if(t!=r)&#123; for(int j=cc;j&lt;=mm;++j) swap(c[t][j],c[r][j]); &#125; for(int j=mm;j&gt;=cc;--j) c[r][j]/=c[r][cc]; for(int i=1;i&lt;=nn;++i)&#123; if(i==r) continue; if(fabs(c[i][cc])&gt;eps) for(int j=mm;j&gt;=cc;--j) c[i][j]=c[i][j]-c[i][cc]*c[r][j]; &#125; ++r; &#125; &#125; Matrix inverse() const&#123; Matrix re(this-&gt;nn,this-&gt;mm),temp=*this; temp.mm*=2; for(int i=1;i&lt;=temp.nn;++i)&#123; temp.c[i].resize(temp.mm+1,0); &#125; for(int i=1;i&lt;=temp.nn;++i)&#123; temp.c[i][temp.nn+i]=1; &#125; temp.elimination(); for(int i=1;i&lt;=re.nn;++i) for(int j=1;j&lt;=re.mm;++j)&#123; re.c[i][j]=temp.c[i][re.nn+j]; &#125; return re; &#125; void output()&#123; for(int i=1;i&lt;=nn;++i)&#123; for(int j=1;j&lt;mm;++j)&#123; printf(&quot;%lf &quot;,c[i][j]); &#125; printf(&quot;%lf\\n&quot;,c[i][mm]); &#125; &#125;&#125;; 在后面线性基的学习中，在网上查了不少，也理解的差不多了，感觉就跟线代里面的最大线性不相关向量组(好像叫这名)很像，只不过是变成了二进制的形式。 然后G题里有一个坑(可能并不算坑)，当线性基的元素个数等于n的时候，他们异或得不到0这个结果。 这部分感觉主要就是熟悉理解模板。但是C题实在是看不出来和高斯消元有什么关系，A题也是一直WA，用了两种方法，都是WA。现在也没想出比较好的解决方法。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-01-08T14:04:51.654Z","updated":"2022-01-08T14:04:51.654Z","comments":true,"path":"2022/01/08/hello-world/","link":"","permalink":"http://example.com/2022/01/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}